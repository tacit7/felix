import Config

# Configure your database
config :phoenix_backend, RouteWiseApi.Repo,
  username: "postgres",
  password: "postgres",
  hostname: "localhost",
  database: "phoenix_backend_dev",
  stacktrace: true,
  show_sensitive_data_on_connection_error: true,
  pool_size: 10,
  types: RouteWiseApi.PostgresTypes

# For development, we disable any cache and enable
# debugging and code reloading.
#
# The watchers configuration can be used to run external
# watchers to your application. For example, we can use it
# to bundle .js and .css sources.
config :phoenix_backend, RouteWiseApiWeb.Endpoint,
  # Binding to all interfaces to allow access from mobile devices on same network
  # Changed from {127, 0, 0, 1} to {0, 0, 0, 0} for mobile development
  http: [ip: {0, 0, 0, 0}, port: 4001],
  check_origin: false,
  code_reloader: true,
  debug_errors: true,
  secret_key_base: "lPZk5X7M8ojR5mma/7W/i7COqkfcUksFz/34cHeZugOXJJOG9SFnCv8yNg3DVrUs",
  watchers: []

# ## SSL Support
#
# In order to use HTTPS in development, a self-signed
# certificate can be generated by running the following
# Mix task:
#
#     mix phx.gen.cert
#
# Run `mix help phx.gen.cert` for more information.
#
# The `http:` config above can be replaced with:
#
#     https: [
#       port: 4001,
#       cipher_suite: :strong,
#       keyfile: "priv/cert/selfsigned_key.pem",
#       certfile: "priv/cert/selfsigned.pem"
#     ],
#
# If desired, both `http:` and `https:` keys can be
# configured to run both http and https servers on
# different ports.

# Enable dev routes for dashboard and mailbox
config :phoenix_backend, dev_routes: true

# Configure console and file logging for development
config :logger, backends: [:console, {LoggerFileBackend, :info_log}]

config :logger, :console, format: "[$level] $message\n"

config :logger, :info_log,
  path: "phoenix.log",
  level: :info,
  format: "$time [$level] $message\n",
  metadata: [:request_id]

# Set a higher stacktrace during development. Avoid configuring such
# in production as building large stacktraces may be expensive.
config :phoenix, :stacktrace_depth, 20

# Initialize plugs at runtime for faster development compilation
config :phoenix, :plug_init_mode, :runtime

# Disable swoosh api client as it is only required for production adapters.
config :swoosh, :api_client, false

config :phoenix_backend, RouteWiseApi.Caching,
  backend: RouteWiseApi.Caching.Backend.Memory,
  enable_logging: true,
  debug_mode: true,
  # Faster expiration for development testing (10% of normal TTL)
  ttl_multiplier: 0.1

# Google Maps API configuration
config :phoenix_backend, :google_maps,
  api_key: System.get_env("GOOGLE_MAPS_API_KEY") || "YOUR_GOOGLE_MAPS_API_KEY_HERE"

# Development-specific tile cache configuration
config :phoenix_backend, RouteWiseApi.TileCache,
  max_memory_mb: 100,              # Smaller cache for development
  default_ttl_days: 1,             # Shorter TTL for testing
  cleanup_interval_minutes: 2,     # More frequent cleanup for testing
  enable_statistics: true

# Development-specific OSM tile client configuration  
config :phoenix_backend, RouteWiseApi.OSMTileClient,
  max_requests_per_second: 5,      # More lenient for development testing
  max_retries: 2,                  # Fewer retries for faster feedback
  timeout_ms: 5_000                # Shorter timeout for development

# Development-specific image service configuration
config :phoenix_backend, RouteWiseApi.ImageService,
  base_url: "http://localhost:4001",
  serve_locally: true,
  image_formats: [:svg, :webp, :jpg, :png],  # Include SVG for dev testing
  enable_fallbacks: true,
  cache_max_age: 3_600               # 1 hour for faster development iteration

# Redis development configuration (disabled by default)
# To enable Redis in development: REDIS_ENABLED=true mix phx.server
config :phoenix_backend, RouteWiseApi.Caching.Backend.Redis,
  host: System.get_env("REDIS_HOST") || "localhost",
  port: String.to_integer(System.get_env("REDIS_PORT") || "6379"),
  database: String.to_integer(System.get_env("REDIS_DATABASE") || "1"),  # Use DB 1 for dev
  password: System.get_env("REDIS_PASSWORD")

# Enable assertions in development
config :phoenix_backend, assertions: true
